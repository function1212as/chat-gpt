"use strict";(self["webpackChunkchat_gtp"]=self["webpackChunkchat_gtp"]||[]).push([[28],{2028:function(n,t,r){r.r(t),r.d(t,{default:function(){return l}});var e=r(8858);function a(n,t,r,a,c,u){const i=(0,e.up)("v-md-preview");return(0,e.wg)(),(0,e.j4)(i,{text:a.text},null,8,["text"])}var c=r(9856),u={name:"MarkdownPracticeDisplay",setup(){const n=(0,c.iH)("\n\n递归是指函数调用自身的过程。下面是一个使用 JavaScript 编写的递归函数示例：\n\n```javascript\nfunction factorial(n) {\n  if (n === 0) { // 基线条件\n    return 1;\n  } else { // 递归条件\n    return n * factorial(n - 1);\n  }\n}\n\nconsole.log(factorial(5)); // 输出 120\n```\n\n这个函数计算了一个数的阶乘。当 `n` 等于 0 时，函数返回 1，这是递归的基线条件。否则，函数将 `n` 乘以 `factorial(n - 1)` 的结果，这是递归条件。因此，函数将一直递归调用自身，直到 `n` 等于 0，然后返回最终结果。");return{text:n}}},i=r(3652);const o=(0,i.Z)(u,[["render",a]]);var l=o}}]);
//# sourceMappingURL=28.ba4f3ee3.js.map